import urllib2
import web
from settings import *

class TemplateHandler:
    '''
    Handles template requests from a origin-white-listed server and returns the content of the requested file
    '''
    def __init__(self):
        pass

    def GET(self, filename):
        '''
        Processes the HTTP GET request
        '''
        refuse = True
        referer = web.ctx.env.get('HTTP_ORIGIN', '')
        #print 'filename ', filename, referer
        #print web.ctx.env
        if referer in CORS_ORIGIN_WHITELIST:
            refuse = False
            web.header("Access-Control-Allow-Origin", referer)
        else:
            web.header("Access-Control-Allow-Origin", "*")

        #web.header("Content-Type", "text/plain; charset=utf-8")
        web.header("Content-Type", '%s; %s' % (TEMPLATE_MAPPING[filename][0], 'charset=utf-8'))
        web.header("Cache-Control", "no-cache")
        web.header("Pragma", "no-cache")
        web.header("Expires", "0")
        response = None
        try:
            if refuse == True:
                response = {'error': 'Origin %s is not allowed to access %s' % (referer, web.ctx.env.get('SERVER_NAME', ''))}
            	return json.dumps(response)

            if filename in TEMPLATE_MAPPING.keys():
                print '%s/%s' % (ROOT_DIR, TEMPLATE_MAPPING[filename])
                templateFile = open('%s/%s' % (ROOT_DIR, TEMPLATE_MAPPING[filename][1]), 'rb')
                response = templateFile.read()
            else:

                response = {'error': 'Template %s is not available' % filename}

        except Exception, inst:
            print inst
        return response

    def POST(self):
        '''
        Processes the HTTP POST request
        '''
        pass

